@using ChatRooms.ViewModels;
@using System.Security.Claims;
@model ChatroomDetailsViewModel

@{
    ViewData["Title"] = "Chatroom Details";
}

<div class="text-left">
    <h1>Details</h1>
</div>

<div>
    <h4>Chatroom</h4>
    <hr />
    <dl class="row">
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Name)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Name)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Description)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Description)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.MsgLengthLimit)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.MsgLengthLimit)
        </dd>
    </dl>
</div>
<div>
    @{
        // Find the claim associated with the user ID
        var userIdClaim = Context.User.FindFirst(ClaimTypes.NameIdentifier);
        var userId = userIdClaim.Value;
    
    @if (User.Identity.IsAuthenticated && userId == Model.OwnerId)
    {
        <a asp-action="Edit" asp-route-id="@Model?.Id" style="margin-right: 4px">Edit</a>
        <a asp-action="Delete" asp-route-id="@Model?.Id" style="margin-right: 4px">Delete</a>
    }
    }
    <a asp-controller="Dashboard" asp-action="Index" style="margin-right: 4px">Back to List</a>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
